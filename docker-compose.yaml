services:
  db:
    image: postgres:16-alpine
    container_name: postgres
    restart: always
    volumes:
      - pg-data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 30s
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - '3000:3000'
    depends_on:
      db:
        condition: service_healthy
        restart: true
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    command: npm run start:dev

networks:
  default:
    driver: bridge
volumes:
  pg-data:
    driver: local
